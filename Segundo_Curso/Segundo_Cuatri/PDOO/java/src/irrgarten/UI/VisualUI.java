/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package irrgarten.UI;

import irrgarten.Directions;
import irrgarten.GameState;

/**
 *
 * @author el_dramas
 */
public class VisualUI extends javax.swing.JFrame implements UI{     //Implementa la interfaz (es decir, realmente no es la intefaz)
    
    private Cursors cursor;

    /**
     * Creates new form VisualUI
     */
    public VisualUI() {
        initComponents();       //Iniciar los componentes de la interfaz
        setVisible(true);     // Hacemos visible la interfaz
        cursor = new Cursors(this,true);    //Inicializamos un cuadro de dialogo
    }

    @Override
    public void showGame(GameState gameState) {   

        //Mostramos estado del juego proporcionado por gameState (Controller)
        labyrinth.setText(gameState.getLabyrinth());
        players.setText("Players:\n"+gameState.getPlayers());
        currentPlayer.setText(gameState.getLog() + "\nCurrent Player:\n" + "Player #" + gameState.getCurrentPlayer());
        monsters.setText("Monsters:\n" + gameState.getMonsters());
        
        String winnerText;
        
        if(gameState.getWinner()){
            winnerText = "There is a winner";
        } else{
            winnerText = "Just keep playing...";
        }
                
        winnerLabel.setText(winnerText);
        
        //Reseteamos los componentes para el proximo turno
        labyrinth.repaint();
        players.repaint();
        currentPlayer.repaint();
        monsters.repaint();
        winnerLabel.repaint();
        
    }
    
    @Override
    public Directions nextMove() {
        
        //Tomamos la direccion del cursor
        Directions direction = cursor.getDirection();           
        return direction;
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        labyrinth = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        players = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        currentPlayer = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        monsters = new javax.swing.JTextArea();
        winnerLabel = new javax.swing.JLabel();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labyrinth.setColumns(20);
        labyrinth.setFont(new java.awt.Font("Courier", 1, 16)); // NOI18N
        labyrinth.setRows(5);
        jScrollPane1.setViewportView(labyrinth);

        players.setColumns(20);
        players.setRows(5);
        jScrollPane2.setViewportView(players);

        currentPlayer.setColumns(20);
        currentPlayer.setRows(5);
        jScrollPane3.setViewportView(currentPlayer);

        monsters.setColumns(20);
        monsters.setRows(5);
        jScrollPane5.setViewportView(monsters);

        winnerLabel.setText("WinnerState:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(winnerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                    .addComponent(jScrollPane5))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(winnerLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );

        jScrollPane1.getAccessibleContext().setAccessibleName("prompt");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea currentPlayer;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea labyrinth;
    private javax.swing.JTextArea monsters;
    private javax.swing.JTextArea players;
    private javax.swing.JLabel winnerLabel;
    // End of variables declaration//GEN-END:variables
}
